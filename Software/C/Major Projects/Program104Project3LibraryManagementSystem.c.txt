/* Program 104 | Project 3: Library Management System */
/* Copyright (c) Bhargava Dantapur | bhargavadantapur@gmail.com */
#include <stdio.h>
#include <string.h>

struct Book {
    char title[100];
    char author[100];
    int id;
    int available;
};

void addBook(struct Book *book) {
    printf("Enter book title: ");
    scanf("%s", book->title);
    printf("Enter author name: ");
    scanf("%s", book->author);
    printf("Enter book ID: ");
    scanf("%d", &book->id);
    book->available = 1;
    printf("Book added successfully.\n");
}

void displayBooks(struct Book *books, int count) {
    for (int i = 0; i < count; ++i) {
        printf("Book ID: %d\n", books[i].id);
        printf("Title: %s\n", books[i].title);
        printf("Author: %s\n", books[i].author);
        printf("Available: %s\n", books[i].available ? "Yes" : "No");
    }
}

void borrowBook(struct Book *books, int count) {
    int id;
    printf("Enter book ID to borrow: ");
    scanf("%d", &id);
    for (int i = 0; i < count; ++i) {
        if (books[i].id == id && books[i].available) {
            books[i].available = 0;
            printf("You have borrowed the book: %s\n", books[i].title);
            return;
        }
    }
    printf("Book not available or invalid ID.\n");
}

void returnBook(struct Book *books, int count) {
    int id;
    printf("Enter book ID to return: ");
    scanf("%d", &id);
    for (int i = 0; i < count; ++i) {
        if (books[i].id == id && !books[i].available) {
            books[i].available = 1;
            printf("You have returned the book: %s\n", books[i].title);
            return;
        }
    }
    printf("Invalid book ID or book was not borrowed.\n");
}

int main() {
    struct Book books[100];
    int choice, count = 0;

    while (1) {
        printf("\n1. Add Book\n2. Display Books\n3. Borrow Book\n4. Return Book\n5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addBook(&books[count]);
                count++;
                break;
            case 2:
                displayBooks(books, count);
                break;
            case 3:
                borrowBook(books, count);
                break;
            case 4:
                returnBook(books, count);
                break;
            case 5:
                return 0;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }
    return 0;
}
